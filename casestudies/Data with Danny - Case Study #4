A. Customer Nodes Exploration
-- 1. How many unique nodes are there on the Data Bank system?
SELECT COUNT(DISTINCT node_id) AS unique_nodes
FROM customer_nodes;

-- 2. What is the number of nodes per region?
SELECT cn.region_id, r.region_name, COUNT(cn.node_id) AS nodes
FROM customer_nodes cn
JOIN regions r ON cn.region_id=r.region_id
GROUP BY cn.region_id;

-- 3. How many customers are allocated to each region?
SELECT cn.region_id, r.region_name, COUNT(DISTINCT cn.customer_id) AS customer_count
FROM customer_nodes cn
JOIN regions r ON cn.region_id=r.region_id
GROUP BY cn.region_id;


B. Customer Transactions
-- 1. What is the unique count and total amount for each transaction type?
SELECT txn_type, COUNT(txn_type) AS transaction_count, SUM(txn_amount) AS transaction_totals
FROM customer_transactions
GROUP BY txn_type;

-- 2. What is the average total historical deposit counts and amounts for all customers?

SELECT AVG(total_count_deposits) AS avg_total_count_deposits, AVG(total_amount_deposits) AS avg_total_amount_deposits
FROM (
SELECT customer_id, count(txn_type) AS total_count_deposits, SUM(txn_amount) AS total_amount_deposits
FROM customer_transactions
WHERE txn_type='deposit'
GROUP BY customer_id
) AS deposit_data;

-- 3. For each month - how many Data Bank customers make more than 1 deposit and either 1 purchase or 1 withdrawal in a single month?

SELECT month, COUNT(customer_id) AS customer_count FROM
(
SELECT customer_id, strftime('%m', txn_date) AS month,
    SUM(CASE WHEN txn_type = 'deposit' THEN 1 ELSE 0 END) AS deposits,
    SUM(CASE WHEN txn_type = 'purchase' OR txn_type = 'withdrawal' THEN 1 ELSE 0 END) AS purchase_or_withdrawal
FROM customer_transactions
GROUP BY strftime('%m', txn_date), customer_id
HAVING SUM(CASE WHEN txn_type = 'deposit' THEN 1 ELSE 0 END) > 1
AND SUM(CASE WHEN txn_type = 'purchase' OR txn_type = 'withdrawal' THEN 1 ELSE 0 END) = 1
) AS transaction_data
GROUP BY month;

-- 4. What is the closing balance for each customer at the end of the month?

WITH CTE AS
(
SELECT strftime('%m', txn_date) AS txn_month, txn_date, customer_id,
    (CASE WHEN txn_type = 'deposit' THEN txn_amount ELSE 0 END) AS deposits,
    (CASE WHEN txn_type <> 'deposit' THEN txn_amount ELSE 0 END) AS expenses,
    SUM((CASE WHEN txn_type = 'deposit' THEN txn_amount ELSE 0 END) - (CASE WHEN txn_type <> 'deposit' THEN txn_amount ELSE 0 END)) AS balance
FROM customer_transactions
GROUP BY txn_date
),
ACCOUNT_BALANCES AS
(
SELECT *,
SUM(balance) OVER (PARTITION BY customer_id ORDER BY txn_date) AS running_balance,
ROW_NUMBER() OVER (PARTITION BY customer_id, txn_month ORDER BY txn_date DESC) as rownum
FROM CTE
)
SELECT customer_id, txn_month, running_balance AS closing_balance
FROM ACCOUNT_BALANCES
WHERE rownum=1
ORDER BY txn_month
