-- Data set:

CREATE SCHEMA dannys_diner;
SET search_path = dannys_diner;

CREATE TABLE sales (
  "customer_id" VARCHAR(1),
  "order_date" DATE,
  "product_id" INTEGER
);

INSERT INTO sales
  ("customer_id", "order_date", "product_id")
VALUES
  ('A', '2021-01-01', '1'),
  ('A', '2021-01-01', '2'),
  ('A', '2021-01-07', '2'),
  ('A', '2021-01-10', '3'),
  ('A', '2021-01-11', '3'),
  ('A', '2021-01-11', '3'),
  ('B', '2021-01-01', '2'),
  ('B', '2021-01-02', '2'),
  ('B', '2021-01-04', '1'),
  ('B', '2021-01-11', '1'),
  ('B', '2021-01-16', '3'),
  ('B', '2021-02-01', '3'),
  ('C', '2021-01-01', '3'),
  ('C', '2021-01-01', '3'),
  ('C', '2021-01-07', '3');
 

CREATE TABLE menu (
  "product_id" INTEGER,
  "product_name" VARCHAR(5),
  "price" INTEGER
);

INSERT INTO menu
  ("product_id", "product_name", "price")
VALUES
  ('1', 'sushi', '10'),
  ('2', 'curry', '15'),
  ('3', 'ramen', '12');
  

CREATE TABLE members (
  "customer_id" VARCHAR(1),
  "join_date" DATE
);

INSERT INTO members
  ("customer_id", "join_date")
VALUES
  ('A', '2021-01-07'),
  ('B', '2021-01-09');

-- Queries:
-- 1. What is the total amount each customer spent at the restaurant?

SELECT sales.customer_id, SUM(menu.price) AS Total_Amount_Spent
FROM dannys_diner.sales sales
JOIN dannys_diner.menu menu
ON sales.product_id=menu.product_id
GROUP BY sales.customer_id
ORDER BY sales.customer_id;

-- 2. How many days has each customer visited the restaurant?

SELECT customer_id, COUNT(DISTINCT order_date) AS Visit_Count
FROM dannys_diner.sales
GROUP BY customer_id;

-- 3. What was the first item from the menu purchased by each customer?

SELECT customer_id, product_name FROM
(
SELECT sales.customer_id, menu.product_name, sales.order_date,
RANK() OVER(PARTITION BY sales.customer_id ORDER BY sales.order_date) AS order_rank
FROM dannys_diner.sales sales
JOIN dannys_diner.menu menu ON menu.product_id=sales.product_id
)
AS first_order
WHERE order_rank=1;

-- 4. What is the most purchased item on the menu and how many times was it purchased by all customers?

SELECT menu.product_name, COUNT(sales.product_id) AS Number_of_Sales
FROM dannys_diner.sales sales
JOIN dannys_diner.menu menu
ON sales.product_id=menu.product_id
GROUP BY menu.product_name
ORDER BY Number_of_Sales DESC
LIMIT 1;

-- 5. Which item was the most popular for each customer? (COME BACK, SOLVE WITH RANK?)
-- 6. Which item was purchased first by the customer after they became a member?

SELECT customer_id, product_name FROM
(
SELECT sales.customer_id, menu.product_name,
RANK() OVER(PARTITION BY sales.customer_id ORDER BY sales.order_date) AS order_rank
FROM dannys_diner.members members
JOIN dannys_diner.sales sales ON members.customer_id=sales.customer_id
JOIN dannys_diner.menu menu ON menu.product_id=sales.product_id
WHERE sales.order_date>members.join_date
)
AS first_order
WHERE order_rank=1;

-- 7. Which item was purchased just before the customer became a member?
-- 8. What is the total items and amount spent for each member before they became a member?
-- 9.  If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?
-- 10. In the first week after a customer joins the program (including their join date) they earn 2x points on all items, not just sushi - how many points do customer A and B have at the end of January?
