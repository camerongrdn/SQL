Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.

SELECT t.Name AS TrackName, al.Title AS AlbumName, m.Name AS MediaType, g.Name AS Genre
FROM chinook.tracks t
JOIN chinook.albums al ON t.AlbumId=al.AlbumId
JOIN chinook.media_types m ON t.MediaTypeId=m.MediaTypeId
JOIN chinook.genres g ON g.GenreId=t.GenreId;

Show the total sales made by each sales agent.

SELECT emp.FirstName ||' '|| emp.LastName AS FullName, ROUND(SUM(inv.Total),2) AS TotalSales
FROM chinook.employees emp
JOIN chinook.customers cust ON cust.SupportRepId=emp.EmployeeId
JOIN chinook.invoices inv ON inv.CustomerId=cust.CustomerId
WHERE emp.Title='Sales Support Agent'
GROUP BY FullName;

Which sales agent made the most dollars in sales in 2009?

SELECT emp.FirstName ||' '|| emp.LastName AS FullName, ROUND(SUM(inv.Total),2) AS TotalSales
FROM chinook.employees emp
JOIN chinook.customers cust ON cust.SupportRepId=emp.EmployeeId
JOIN chinook.invoices inv ON inv.CustomerId=cust.CustomerId
WHERE emp.Title='Sales Support Agent' AND inv.InvoiceDate LIKE '2009%'
GROUP BY FullName
ORDER BY TotalSales DESC
LIMIT 1;

-- 1. How many times does each genre show up in playlist 1? (genre name, # of times, playlist number)

SELECT pl.PlaylistId, g.Name, COUNT(g.Name) AS 'Total # of Genre Tracks'
FROM chinook.genres g
JOIN chinook.tracks tr ON tr.GenreId=g.GenreId
JOIN chinook.playlist_track pltr ON pltr.TrackId=tr.TrackId
JOIN chinook.playlists pl ON pl.PlaylistId=pltr.PlaylistId
WHERE pl.PlaylistId=1
GROUP BY g.Name;

-- 2. What are all the artists that show up in each playlist? (artist name, playlist number)

SELECT DISTINCT ar.Name AS ArtistName, pl.PlaylistId
FROM chinook.artists ar
JOIN chinook.albums al ON al.ArtistId=ar.ArtistId
JOIN chinook.tracks tr ON tr.AlbumId=al.AlbumId
JOIN chinook.playlist_track pltr ON pltr.TrackId=tr.TrackId
JOIN chinook.playlists pl ON pl.PlaylistId=pltr.PlaylistId
ORDER BY pl.PlaylistId;

-- 3. Which artist has the most tracks in the Heavy Metal Classic playlist? (artist name, # of tracks, playlist number)

SELECT ar.Name AS ArtistName, COUNT(pltr.TrackId) AS '# of Tracks', pl.Name AS PlaylistName
FROM chinook.artists ar
JOIN chinook.albums al ON al.ArtistId=ar.ArtistId
JOIN chinook.tracks tr ON tr.AlbumId=al.AlbumId
JOIN chinook.playlist_track pltr ON pltr.TrackId=tr.TrackId
JOIN chinook.playlists pl ON pl.PlaylistId=pltr.PlaylistId
WHERE pl.PlaylistId=17
GROUP BY ArtistName;

-- 4. What tracks are in the 90s Music playlist? (track name, artist name, playlist name)

SELECT tr.Name AS TrackName, ar.Name AS ArtistName, pl.Name AS PlaylistName
FROM chinook.artists ar
JOIN chinook.albums al ON al.ArtistId=ar.ArtistId
JOIN chinook.tracks tr ON tr.AlbumId=al.AlbumId
JOIN chinook.playlist_track pltr ON pltr.TrackId=tr.TrackId
JOIN chinook.playlists pl ON pl.PlaylistId=pltr.PlaylistId
WHERE pl.PlaylistId=5;

-- 5. List the albums in order of longest track list. NOTE: Aliases are done in backticks to allow ordering by an alias.

SELECT al.Title AS `Album Title`, ar.Name AS `Artist Name`, COUNT(tr.Name) AS `Number of Tracks`
FROM chinook.albums al
JOIN chinook.tracks tr ON tr.AlbumId=al.AlbumId
JOIN chinook.artists ar ON ar.ArtistId=al.ArtistId
WHERE tr.MediaTypeId IN (1,2,4,5)
GROUP BY al.Title
ORDER BY `Number of Tracks` DESC;

-- 6. Who are the top 5 customers who made purchases?

SELECT cust.CustomerId, cust.FirstName ||' '|| cust.LastName AS `Customer Name`, SUM(inv.Total) AS `Total Purchase Amount`
FROM chinook.customers cust
JOIN chinook.invoices inv ON inv.CustomerId=cust.CustomerId
GROUP BY `Customer Name`
ORDER BY `Total Purchase Amount` DESC
LIMIT 5;

-- 7. What is the most recent music purchase and by who? (customer name, track name, album name, artist name, purchase date, purchase amount, limit 1)
-- UNFINISHED, NEED TO NARROW DOWN TO TOP CUSTOMER

SELECT cust.CustomerId, cust.FirstName ||' '|| LastName AS 'Customer Full Name', tr.Name AS 'Track Name', al.Title AS 'Album Name',
ar.Name AS 'Artist Name', inv.InvoiceDate, inv.Total AS 'Purchase Total'
FROM chinook.customers cust
JOIN chinook.invoices inv ON inv.CustomerId=cust.CustomerId
JOIN chinook.invoice_items invit ON invit.InvoiceId=inv.InvoiceId
JOIN chinook.tracks tr ON tr.TrackId=invit.TrackId
JOIN chinook.albums al ON al.AlbumId=tr.AlbumId
JOIN chinook.artists ar ON ar.ArtistId=al.ArtistId
JOIN chinook.media_types mt ON mt.MediaTypeId=tr.MediaTypeId
WHERE mt.MediaTypeId IN (1,2,4,5)
ORDER BY inv.InvoiceDate DESC;

-- 8. What are the most popular/purchased programs?

SELECT al.Title AS `Show, Season`, COUNT(invit.TrackId) AS `Number of Purchases`
FROM chinook.tracks tr
JOIN chinook.albums al ON al.AlbumId=tr.AlbumId
RIGHT JOIN chinook.invoice_items invit ON invit.TrackId=tr.TrackId
WHERE tr.MediaTypeId=3
GROUP BY `Show, Season`
ORDER BY `Number of Purchases` DESC;

-- 9. Show customers who are not in Germany.

SELECT CustomerId, FirstName ||' '|| LastName, Country
FROM chinook.customers
WHERE Country !='Germany';

-- 10. Provide a query that shows the invoices associated with each sales agent.

SELECT emp.EmployeeId, emp.FirstName ||' '|| emp.LastName, inv.InvoiceId
FROM chinook.employees emp
JOIN chinook.customers cust ON cust.SupportRepId=emp.EmployeeId
JOIN chinook.invoices inv ON inv.CustomerId=cust.CustomerId;

-- 11. What are the total sales for 2012?

SELECT SUM(inv.Total) AS 'Total Sales'
FROM chinook.invoices inv
WHERE inv.InvoiceDate LIKE '2012%';
